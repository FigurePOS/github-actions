name: "Update mobile app OTA (over the air)"

on:
  workflow_call:
    inputs:
      author:
        description: "Author of the update"
        required: false
        type: string
      environment:
        description: "Environment"
        required: true
        type: string
        #options: development, production
      whitelabel:
        description: "Whitelabel (used for mobile ordering)"
        required: false
        type: string
        default: ""
      platform:
        description: "Platform"
        required: false
        default: "all"
        type: string
        # options: all, ios, android
      version:
        description: "Version"
        required: true
        type: string
      git-ref:
        description: "Git ref"
        required: false
        type: string
      should-notify:
        description: "Should send a notification to Buddy"
        required: false
        type: boolean
        default: true
      code-bundle-suffix:
        description: "Allows to add custom suffix to bundle id for source maps upload"
        required: false
        type: string
        default: ""
      working-directory:
        description: "Working directory"
        required: false
        type: string
        default: "./"
    secrets:
      BUDDY_TRIGGER_URL:
        description: "Buddy trigger URL"
        required: true
      BUGSNAG_API_KEY:
        description: "Bugsnag API key"
        required: true
      EXPO_TOKEN:
        description: "EXPO token"
        required: true
      ENV_JSON:
        description: "Environment JSON"
        required: false

permissions:
  contents: read
  packages: read

jobs:
  version:
    name: "Update OTA"
    runs-on: blacksmith-4vcpu-ubuntu-2204
    env:
      APP_VARIANT: ${{ inputs.environment }}
      WHITELABEL: ${{ inputs.whitelabel }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git-ref || format('v{0}', inputs.version) }}
          # This makes sure there are two commits in the git history, needed for getting the previous commit message.
          fetch-depth: 2

      - name: Set Up Node.js
        uses: FigurePOS/github-actions/.github/actions/setup-node@v1

      - name: Install Dependencies
        uses: FigurePOS/github-actions/.github/actions/install-dependencies@v1

      - name: Set Environment
        uses: FigurePOS/github-actions/.github/actions/mobile-set-env@v3
        with:
          env-json: ${{ secrets.ENV_JSON }}
          destination: ${{ inputs.working-directory }}/env.json

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Get Git Message
        id: get-git-message
        uses: FigurePOS/github-actions/.github/actions/git-get-message@v3
        with:
          commit-offset: 2

      - name: Get App Info
        uses: FigurePOS/github-actions/.github/actions/eas-get-app-info@v3
        id: get-app-info
        with:
          environment: ${{ inputs.environment }}
          platform: ${{ inputs.platform }}
          whitelabel: ${{ inputs.whitelabel }}
          working-directory: ${{ inputs.working-directory }}

      - name: Update OTA with Expo Updates
        env:
          GIT_MESSAGE: ${{ steps.get-git-message.outputs.message }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          message_git=${GIT_MESSAGE//\"/\\\"}
          message=$(printf "v%s: %s" "${{ inputs.version }}" "$message_git")
          echo "Running deployment for:"
          echo "  environment: '${{ inputs.environment }}'"
          echo "  platform: '${{ inputs.platform }}'"
          echo "  message: '$message'"
          echo "  author: '${{ inputs.author }}'"
          eas update --channel ${{ inputs.environment }} -p ${{ inputs.platform }} -m "$message" --non-interactive

      - name: Upload Source Maps to Bugsnag
        uses: FigurePOS/github-actions/.github/actions/bugsnag-upload-source-maps-mobile@v3
        with:
          api-key: ${{ secrets.BUGSNAG_API_KEY }}
          version: ${{ inputs.version }}
          platform: ${{ inputs.platform }}
          environment: ${{ inputs.environment }}
          code-bundle-suffix: ${{ inputs.code-bundle-suffix }}
          working-directory: ${{ inputs.working-directory }}

      - name: Send Slack Notification
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-deploy-mobile@v3
        if: ${{ inputs.should-notify }}
        with:
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
          app-name: ${{ steps.get-app-info.outputs.app-name }}
          app-version: ${{ inputs.version }}
          environment: ${{ inputs.environment }}
          platform: ${{ inputs.platform }}
          commit-hash: ${{ steps.get-git-message.outputs.hash }}
          commit-message: ${{ steps.get-git-message.outputs.message }}
          author: ${{ inputs.author }}
          build-type: "over-the-air"

      - name: Send Slack Notification About Failure
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v3
        if: failure()
        with:
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
          job-name: "update-mobile-ota (${{ inputs.environment }})"
          service-name: ${{ steps.get-app-info.outputs.app-name }}
