name: "Update mobile app OTA (over the air)"

on:
  workflow_call:
    inputs:
      author:
        description: "Author of the update"
        required: false
        type: string
      environment:
        description: "Environment"
        required: true
        type: string
        #options: development, production
      whitelabel:
        description: "Whitelabel (used for mobile ordering)"
        required: false
        type: string
        default: ""
      platform:
        description: "Platform"
        required: true
        default: "all"
        type: string
        # options: all, ios, android
      version:
        description: "Version"
        required: true
        type: string
      should-notify:
        description: "Should send a notification to Buddy"
        required: false
        type: boolean
        default: true
    secrets:
      BUDDY_TRIGGER_URL:
        description: "Buddy trigger URL"
        required: true
      BUGSNAG_API_KEY:
        description: "Bugsnag API key"
        required: true
      EXPO_TOKEN:
        description: "EXPO token"
        required: true
      ENV_JSON:
        description: "Environment JSON"
        required: false

permissions:
  contents: read
  packages: read

jobs:
  version:
    name: "Update OTA"
    runs-on: "ubuntu-latest"
    env:
      APP_VARIANT: ${{ inputs.environment }}
      WHITELABEL: ${{ inputs.whitelabel }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "v${{ inputs.version }}"
          # This makes sure there are two commits in the git history, needed for getting the previous commit message.
          fetch-depth: 2
      - name: Set Up Node.js
        uses: FigurePOS/github-actions/.github/actions/setup-node@v0.1.0
      - name: Install Dependencies
        uses: FigurePOS/github-actions/.github/actions/install-dependencies@v0.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Environment
        uses: FigurePOS/github-actions/.github/actions/mobile-set-env@v0.1.0
        with:
          env-json: ${{ secrets.ENV_JSON }}
      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      - name: Get Git Message
        id: get-git-message
        uses: FigurePOS/github-actions/.github/actions/git-get-message@v0.1.0
        with:
          commit-offset: 2
      - name: Get App Info
        uses: FigurePOS/github-actions/.github/actions/eas-get-app-info@v0.1.0
        id: get-app-info
        with:
          environment: ${{ inputs.environment }}
          platform: ${{ inputs.platform }}
          whitelabel: ${{ inputs.whitelabel }}
      - name: Update OTA with Expo Updates
        run: |
          message="v${{ inputs.version }}: ${{ steps.get-git-message.outputs.message }}"
          echo "Running deployment for:"
          echo "  environment: '${{ inputs.environment }}'"
          echo "  platform: '${{ inputs.platform }}'"
          echo "  message: '$message'"
          echo "  author: '${{ inputs.author }}'"
          eas update --channel ${{ inputs.environment }} -p ${{ inputs.platform }} -m "$message" --non-interactive
      - name: Upload Source Maps to Bugsnag
        uses: FigurePOS/github-actions/.github/actions/bugsnag-upload-source-maps-mobile@v0.1.0
        with:
            api-key: ${{ secrets.BUGSNAG_API_KEY }}
            version: ${{ inputs.version }}
            platform: ${{ inputs.platform }}
            environment: ${{ inputs.environment }}
      - name: Send Slack Notification
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-deploy-mobile@v0.1.0
        if: ${{ inputs.should-notify }}
        with:
            trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
            app-name: ${{ steps.get-app-info.outputs.app-name }}
            app-version: ${{ inputs.version }}
            environment: ${{ inputs.environment }}
            platform: ${{ inputs.platform }}
            commit-message: ${{ steps.get-git-message.outputs.message }}
            author: ${{ inputs.author }}
            build-type: "over-the-air"

