name: Integration
on: 
  workflow_call:
    inputs:
      aws-region:
        description: "AWS region"
        required: false
        type: string
        default: "us-east-1"
      db-tunnel-mapping:
        description: "DB tunnel mapping"
        required: false
        type: string
        default: ""
      docker-command:
        description: "Command to start the service in Docker"
        required: false
        type: string
        default: "build/index.js"
      ecr-repository-name:
        description: "ECR Docker repository name"
        required: true
        type: string
      service-name:
        description: "Service name"
        required: true
        type: string
    secrets:
      BUDDY_TRIGGER_URL:
        description: "Buddy trigger URL"
      GH_TOKEN_TERRAFORM:
        description: "GitHub token to access other private repositories"
        required: false
      TEST_E2E_ENV:
        description: "Environment variables for e2e tests"
        required: false

permissions:
  # Required to query workflow run status and trigger other workflows
  actions: read
  # Allows the workflow to create and update check runs (e.g., test results, linting)
  checks: write 
  # Needed to checkout repository code and read repository contents
  contents: read
  # Required for OIDC authentication with AWS
  id-token: write
  # Allows reading from GitHub container registry (ghcr.io)
  packages: read
  # Enables commenting and updating PR status (e.g., posting test results, terraform plans)
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
    
jobs:
  build:
    runs-on: "blacksmith-4vcpu-ubuntu-2204"
    env:
      AWS_REGION: ${{ inputs.aws-region }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set Up Node.js
        uses: FigurePOS/github-actions/.github/actions/setup-node@v1
      
      - name: Install Dev Dependencies
        uses: FigurePOS/github-actions/.github/actions/install-dependencies@v1

      - name: Yarn Build
        run: yarn run build:ci 2>/dev/null || yarn build

      - name: Install Prod Dependencies
        uses: FigurePOS/github-actions/.github/actions/install-dependencies@v1
        with:
          prod: true

      - name: Build Image
        uses: FigurePOS/github-actions/.github/actions/docker-build-image@v1
        with:
          repository-name: ${{ inputs.ecr-repository-name }}
          service-name: ${{ inputs.service-name }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "build"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
  
  test-unit:
    runs-on: "blacksmith-4vcpu-ubuntu-2204"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: FigurePOS/github-actions/.github/actions/setup-node@v1

      - name: Install Dependencies
        uses: FigurePOS/github-actions/.github/actions/install-dependencies@v1

      - name: Run Linters and Unit Tests
        run: yarn run test:ci 2>/dev/null || yarn run ci

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "test-unit"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
  
  test-e2e:
    runs-on: "blacksmith-4vcpu-ubuntu-2204"
    needs:
      - build
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if Tests Directory Exists
        id: check
        run: |-
          if [[ ! -d "./tests" ]]; then
            echo "::warning title=Missing e2e tests::Tests directory not found, skipping e2e tests"
            echo "skip=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Set Environment Variables
        run: |
          if [ -n '${{ secrets.TEST_E2E_ENV }}' ]; then
            echo '${{ secrets.TEST_E2E_ENV }}' | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while read -r line; do
              #secret=${line#*=}
              #echo "::add-mask::$secret"
              echo "$line" >> "$GITHUB_ENV"
            done
          fi

      - name: Set Up Node.js
        if: steps.check.outputs.skip != 'true'
        uses: FigurePOS/github-actions/.github/actions/setup-node@v1

      - name: Install Dependencies
        if: steps.check.outputs.skip != 'true'
        uses: FigurePOS/github-actions/.github/actions/install-dependencies@v1

      - name: Load Docker Image
        if: steps.check.outputs.skip != 'true'
        uses: FigurePOS/github-actions/.github/actions/docker-load-image@v1
        with:
          service-name: ${{ inputs.service-name }}

      - name: Install Dependencies in Tests Directory
        if: steps.check.outputs.skip != 'true'
        uses: FigurePOS/github-actions/.github/actions/install-dependencies@v1
        with:
          directory: tests

      - name: Run Tests
        if: steps.check.outputs.skip != 'true'
        run: |-
          sha_short=$(git rev-parse --short ${{ github.sha }})
          export SERVICE_DOCKER_IMAGE=637192944017.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.ecr-repository-name }}:$sha_short
          TEST_CMD="yarn start" yarn test:integration:prepare
        env:
          SERVICE_DOCKER_COMMAND: node --enable-source-maps ${{ inputs.docker-command }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master' && steps.check.outputs.skip != 'true'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "test-e2e"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
  
  terraform-validate:
    runs-on: "blacksmith-2vcpu-ubuntu-2204"
    env:
      AWS_REGION: ${{ inputs.aws-region }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        uses: FigurePOS/github-actions/.github/actions/terraform-init@v1
        with:
          db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
          env: development
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}

      - name: Terraform Validate
        uses: FigurePOS/github-actions/.github/actions/terraform-validate@v1
        with:
          aws-account-id: '880892332156'
          env: development
          service-name: ${{ inputs.service-name }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "terraform-validate"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}

  terraform-plan-dev:
    if: github.event_name == 'pull_request'
    needs:
      - terraform-validate
    runs-on: "blacksmith-2vcpu-ubuntu-2204"
    env:
      AWS_REGION: ${{ inputs.aws-region }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        uses: FigurePOS/github-actions/.github/actions/terraform-init@v1
        with:
          db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
          env: development
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}

      - name: Terraform Plan
        uses: FigurePOS/github-actions/.github/actions/terraform-plan@v1
        with:
          aws-account-id: '880892332156'
          env: development
          service-name: ${{ inputs.service-name }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "terraform-plan-dev"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
  
  terraform-plan-prod:
    if: github.event_name == 'pull_request'
    needs:
      - terraform-validate
    runs-on: "blacksmith-2vcpu-ubuntu-2204"
    env:
      AWS_REGION: ${{ inputs.aws-region }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        uses: FigurePOS/github-actions/.github/actions/terraform-init@v1
        with:
          db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
          env: production
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}

      - name: Terraform Plan
        uses: FigurePOS/github-actions/.github/actions/terraform-plan@v1
        with:
          aws-account-id: '682919404744'
          env: production
          service-name: ${{ inputs.service-name }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "terraform-plan-prod"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
  
  push:
    if: github.ref == 'refs/heads/master'
    needs:
      - build
      - test-e2e
      - test-unit
    runs-on: "blacksmith-4vcpu-ubuntu-2204"
    env:
      AWS_REGION: ${{ inputs.aws-region }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load docker image
        uses: FigurePOS/github-actions/.github/actions/docker-load-image@v1
        with:
          service-name: ${{ inputs.service-name }}

      - name: Push Docker Image
        uses: FigurePOS/github-actions/.github/actions/docker-push-image@v1
        with:
          repository-name: ${{ inputs.ecr-repository-name }}
          service-name: ${{ inputs.service-name }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "push"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
  
  terraform-deploy-dev:
    if: github.ref == 'refs/heads/master'
    needs:
      - push
    runs-on: "blacksmith-4vcpu-ubuntu-2204"
    env:
      AWS_REGION: ${{ inputs.aws-region }}
    steps:
      - uses: actions/checkout@v4

      - name: Terraform Init
        uses: FigurePOS/github-actions/.github/actions/terraform-init@v1
        with:
          db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
          env: development
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}

      - name: Terraform Deploy
        uses: FigurePOS/github-actions/.github/actions/terraform-apply@v1
        with:
          aws-account-id: '880892332156'
          env: development
          service-name: ${{ inputs.service-name }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "terraform-deploy-dev"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}

  serverless-decide-run:
    runs-on: "blacksmith-2vcpu-ubuntu-2204"
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for Changes in lambda Directory
        id: check
        run: |
          if [ ! -f "lambda/serverless.yml" ]; then
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            git diff --quiet origin/${{ github.base_ref }} HEAD -- lambda/ || echo "has_changes=true" >> "$GITHUB_OUTPUT"
          else
            git diff --quiet HEAD^ HEAD -- lambda/ || echo "has_changes=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "serverless-decide-run"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
  
  serverless-lint:
    if: needs.serverless-decide-run.outputs.has_changes == 'true'
    needs:
      - serverless-decide-run
    runs-on: "blacksmith-2vcpu-ubuntu-2204"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: FigurePOS/github-actions/.github/actions/setup-node@v1

      - name: Install Dependencies
        uses: FigurePOS/github-actions/.github/actions/install-dependencies@v1
        with:
          directory: lambda
      
      - name: Run Lint
        working-directory: lambda
        run: yarn test:ci

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "serverless-lint"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}

  serverless-deploy-dev:
    if: needs.serverless-decide-run.outputs.has_changes == 'true' && github.ref == 'refs/heads/master'
    needs:
      - serverless-decide-run
      - serverless-lint
    runs-on: "blacksmith-4vcpu-ubuntu-2204"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: FigurePOS/github-actions/.github/actions/serverless-deploy@v1
        with:
          aws-account-id: '880892332156'
          env: development
          service-name: ${{ inputs.service-name }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "serverless-deploy-dev"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}

  notify-buddy:
    if: github.ref == 'refs/heads/master'
    needs:
      - terraform-deploy-dev
      - serverless-decide-run
    runs-on: "blacksmith-2vcpu-ubuntu-2204"
    env:
      AWS_REGION: ${{ inputs.aws-region }}
    steps:
      - uses: actions/checkout@v4

      - uses: FigurePOS/github-actions/.github/actions/buddy-notify-deploy-service@v1
        with:
          deploy-serverless: ${{ needs.serverless-decide-run.outputs.has_changes == 'true' }}
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}

      - name: Send Slack Notification About Failure
        if: failure() && github.ref == 'refs/heads/master'
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v1
        with:
          job-name: "notify-buddy"
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
