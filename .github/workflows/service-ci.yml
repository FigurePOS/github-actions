name: Integration
on: 
  workflow_call:
    inputs:
      aws-region:
        description: "AWS region"
        required: false
        type: string
        default: "us-east-1"
      db-tunnel-mapping:
        description: "DB tunnel mapping"
        required: false
        type: string
        default: ""
      docker-command:
        description: "Command to start the service in Docker"
        required: false
        type: string
        default: "build/index.js"
      ecr-repository-name:
        description: "ECR Docker repository name"
        required: true
        type: string
      service-name:
        description: "Service name"
        required: true
        type: string
      test-e2e-env-vars:
        description: "Environment variables for e2e tests"
        required: false
        type: string
        default: ""
      test-unit-env-vars:
        description: "Environment variables for unit tests"
        required: false
        type: string
        default: ""
      ubuntu-release:
        description: "Ubuntu release (e.g., 2204, 2404)"
        required: false
        type: string
        default: "2404"
    secrets:
      BUDDY_TRIGGER_URL:
        description: "Buddy trigger URL"
      GH_TOKEN_TERRAFORM:
        description: "GitHub token to access other private repositories"
        required: false
      TEST_E2E_ENV_VARS:
        description: "Environment variables for e2e tests"
        required: false
      TEST_UNIT_ENV_VARS:
        description: "Environment variables for unit tests"
        required: false

permissions:
  # Required to query workflow run status and trigger other workflows
  actions: read
  # Allows the workflow to create and update check runs (e.g., test results, linting)
  checks: write 
  # Needed to checkout repository code and read repository contents
  contents: read
  # Required for OIDC authentication with AWS
  id-token: write
  # Allows reading from GitHub container registry (ghcr.io)
  packages: read
  # Enables commenting and updating PR status (e.g., posting test results, terraform plans)
  pull-requests: write
  # Allows creating and updating Deployments
  deployments: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
    
jobs:
  build:
    runs-on: ${{ format('blacksmith-4vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-node-build@v4
        with:
          ecr-repository-name: ${{ inputs.ecr-repository-name }}
          service-name: ${{ inputs.service-name }}
  
  test-unit:
    runs-on: ${{ format('blacksmith-2vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-node-test-unit@v4
        with:
          env-vars: ${{ inputs.test-unit-env-vars || secrets.TEST_UNIT_ENV_VARS }}
          service-name: ${{ inputs.service-name }}
  
  test-e2e:
    needs:
      - build
    runs-on: ${{ format('blacksmith-4vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-node-test-e2e@v4
        with:
          docker-command: ${{ inputs.docker-command }}
          ecr-repository-name: ${{ inputs.ecr-repository-name }}
          env-vars: ${{ inputs.test-e2e-env-vars || secrets.TEST_E2E_ENV_VARS }}
          service-name: ${{ inputs.service-name }}

  test-lambda:
    uses: ./.github/workflows/lambda-ci.yml
    
    with:
      service-name: ${{ inputs.service-name }}
    secrets:
      BUDDY_TRIGGER_URL: ${{ secrets.BUDDY_TRIGGER_URL }}
  
  terraform-validate:
    runs-on: ${{ format('blacksmith-2vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-terraform-validate@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}

  terraform-plan-dev:
    if: github.event_name == 'pull_request'
    needs:
      - terraform-validate
    runs-on: ${{ format('blacksmith-2vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-terraform-plan@v4
        with:
          aws-account-id: 880892332156
          aws-region: ${{ inputs.aws-region }}
          db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
          env: development
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}
  
  terraform-plan-prod:
    if: github.event_name == 'pull_request'
    needs:
      - terraform-validate
    runs-on: ${{ format('blacksmith-2vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-terraform-plan@v4
        with:
          aws-account-id: 682919404744
          aws-region: ${{ inputs.aws-region }}
          db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
          env: production
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}

  push:
    if: github.ref == 'refs/heads/master'
    needs:
      - build
      - test-e2e
      - test-unit
      - test-lambda
    runs-on: ${{ format('blacksmith-4vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-docker-push@v4
        with:
          ecr-repository-name: ${{ inputs.ecr-repository-name }}
          service-name: ${{ inputs.service-name }}
          
  terraform-deploy-dev:
    if: github.ref == 'refs/heads/master'
    needs:
      - push
    runs-on: ${{ format('blacksmith-4vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-terraform-apply@v4
        with:
          aws-account-id: 880892332156
          aws-region: ${{ inputs.aws-region }}
          db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
          env: development
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}

  notify-buddy:
    if: github.ref == 'refs/heads/master'
    needs:
      - terraform-deploy-dev
    runs-on: ${{ format('blacksmith-2vcpu-ubuntu-{0}', inputs.ubuntu-release) }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-notify-buddy@v4
        with:
          buddy-trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
          service-name: ${{ inputs.service-name }}
