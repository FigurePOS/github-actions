name: Production Deployment
on: 
  workflow_call:
    inputs:
      aws-account-id:
        description: AWS account ID
        required: false
        type: string
        default: "682919404744"
      aws-region:
        description: AWS region
        required: false
        type: string
        default: us-east-1
      db-tunnel-mapping:
        description: DB tunnel mapping
        required: false
        type: string
        default: ""
      service-name:
        description: Service name
        required: true
        type: string
      sha:
        description: Release commit SHA
        required: true
        type: string
    secrets:
      BUDDY_TRIGGER_URL:
        description: Buddy trigger URL
      GH_TOKEN_TERRAFORM:
        description: GitHub token to access other private repositories
        required: false

permissions:
  # Needed to checkout repository code, read repository contents and create tags
  contents: write
  # Required for OIDC authentication with AWS
  id-token: write
  # Allows reading from GitHub container registry (ghcr.io)
  packages: read

jobs:
  terraform-deploy:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    env:
      AWS_REGION: ${{ inputs.aws-region }}
    steps:
      - uses: FigurePOS/github-actions/.github/actions/ci-terraform-apply@v4
        with:
          aws-account-id: ${{ inputs.aws-account-id }}
          aws-region: ${{ inputs.aws-region }}
          buddy-trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
          db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
          env: production
          github-token-terraform: ${{ secrets.GH_TOKEN_TERRAFORM }}
          service-name: ${{ inputs.service-name }}
          sha: ${{ inputs.sha }}

      - name: Create a Release Tag and Update the Production Tag
        uses: actions/github-script@v7
        with:
          retries: 3
          script: |
            const date = new Date();
            const tag = date.toISOString().replace(/[-:Z]/g, "").replace(/[T\.]/g, "-");
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/release-${tag}`,
              sha: "${{ inputs.sha }}"
            })
            try {
              await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "tags/production"
              });
              // If the tag exists, update it
              await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "tags/production",
                sha: "${{ inputs.sha }}",
                force: true
              });
            } catch (error) {
              if (error.status === 404) {
              // If the tag does not exist, create it
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "refs/tags/production",
                sha: "${{ inputs.sha }}"
              });
              } else {
                throw error;
              }
            }

      - name: Send Slack Notification About Failure
        if: failure()
        uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v4
        with:
          job-name: terraform-deploy-prod
          service-name: ${{ inputs.service-name }}
          trigger-url: ${{ secrets.BUDDY_TRIGGER_URL }}
