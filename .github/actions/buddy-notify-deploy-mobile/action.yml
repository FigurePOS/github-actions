name: Notify Buddy about mobile deployment
description: Sends a notification about mobile deployment through Buddy to Slack

inputs:
  app-name:
    description: "Name of the app"
    required: true
  app-version:
    description: "Version of the app"
    required: true
  author:
    description: "Author of the build"
    required: false
  build-type:
    description: "Type of the build"
    required: true
    # options: over-the-air, native
  build-url:
    description: "URL of the build"
    required: false
  commit-hash:
    description: "Commit hash of the build"
    required: false
  commit-message:
    description: "Commit message of the build"
    required: true
  environment:
    description: "Environment of the app"
    required: true
    # options: development, production
  platform:
    description: "Platform of the app"
    required: true
    # options: ios, android, all
  trigger-url:
    description: "URL to trigger the notification"
    required: true

runs:
  using: composite
  steps:
    - name: Send Notification
      shell: bash
      env:
        APP_NAME: ${{ inputs.app-name }}
        APP_VERSION: ${{ inputs.app-version }}
        AUTHOR: ${{ inputs.author }}
        BUILD_TYPE: ${{ inputs.build-type }}
        BUILD_URL: ${{ inputs.build-url }}
        COMMIT_HASH: ${{ inputs.commit-hash }}
        COMMIT_MESSAGE: ${{ inputs.commit-message }}
        ENVIRONMENT: ${{ inputs.environment }}
        PLATFORM: ${{ inputs.platform }}
        TRIGGER_URL: ${{ inputs.trigger-url }}
      run: |
        # Access environment variables directly in jq to avoid shell interpolation issues
        payload=$(jq -n '
          {
            "type": "dev-deployed",
            "mobile": true,
            "app_name": env.APP_NAME,
            "app_version": env.APP_VERSION,
            "env": env.ENVIRONMENT,
            "platform": env.PLATFORM,
            "commit_message": env.COMMIT_MESSAGE,
            "build_type": env.BUILD_TYPE,
            "build_url": env.BUILD_URL,
            "commit_hash": env.COMMIT_HASH,
            "author": env.AUTHOR
          }
        ')
        
        echo "Sending notification to Buddy..."
        echo "  payload: $payload"
        echo "  trigger-url: $TRIGGER_URL"
        
        curl \
          --retry 3 --retry-connrefused \
          -X POST \
          -H "Content-type: application/json" \
          --data "$payload" \
          "$TRIGGER_URL"
        echo "Notification was sent."
