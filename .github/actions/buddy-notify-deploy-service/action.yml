name: Notify Buddy about service deployment
description: Sends a notification about service deployment through Buddy to Slack

inputs:
  commit-hash:
    description: "Commit hash of the build, last commit hash by default."
    required: false
  commit-message:
    description: "Commit message of the build, last commit message by default."
    required: false
  service-name:
    required: true
  trigger-url:
    required: true

runs:
  using: composite
  steps:
  - name: Send Notification
    shell: bash
    env:
      AUTHOR: ${{ github.triggering_actor }}
      SERVICE_NAME: ${{ inputs.service-name }}
      TRIGGER_URL: ${{ inputs.trigger-url }}
    run: |-
      if [ -n "${{ inputs.commit-hash }}" ]; then
        commit_hash="${{ inputs.commit-hash }}"
      else
        commit_hash="$(git log --pretty=format:'%H' -n 1 | less -F)"
      fi

      if [ -n "${{ inputs.commit-message }}" ]; then
        commit_message="${{ inputs.commit-message }}"
      else
        commit_message="$(git log --pretty=format:'%s' -n 1 | less -F)"
      fi
      
      # Store computed values in environment variables
      export COMMIT_HASH="$commit_hash"
      export COMMIT_MESSAGE="$commit_message"
      
      # Access environment variables directly in jq to avoid shell interpolation issues
      payload=$(jq -n '
        {
          "type": "dev-deployed", 
          "service_name": env.SERVICE_NAME, 
          "author": env.AUTHOR, 
          "commit_hash": env.COMMIT_HASH, 
          "commit_message": env.COMMIT_MESSAGE, 
          "ci": "github"
        }
      ')
      
      echo "Sending notification to Buddy..."
      echo "  payload: $payload"
      echo "  trigger-url: $TRIGGER_URL"
      
      curl \
          --retry 3 --retry-connrefused \
          -X POST \
          -H "Content-type: application/json" \
          --data "$payload" \
          "$TRIGGER_URL"
      echo "Notification was sent."
