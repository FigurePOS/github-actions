name: Node Test Unit
description: Runs the linters and unit tests for the Node.js app

inputs:
  buddy-trigger-url:
    description: The Buddy trigger URL
    required: true
  env-vars:
    description: Environment variables for the tests
    required: false
  npm-legacy-peer-deps:
    description: Whether to use legacy peer dependencies
    required: false
    default: false
  service-name:
    description: The service name
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set Up Node.js
      uses: FigurePOS/github-actions/.github/actions/node-setup@v3

    - name: Install Dependencies
      uses: FigurePOS/github-actions/.github/actions/node-npm-install@v3
      with:
        legacy-peer-deps: ${{ inputs.npm-legacy-peer-deps }}

    - name: Check for SDK Directory
      id: check-sdk
      shell: bash
      run: |
        if [ -d "./sdk" ] && [ -f "./sdk/package.json" ]; then
          echo "sdk-exists=true" >> $GITHUB_OUTPUT
          echo "SDK directory with package.json found. Will install dependencies."
        else
          echo "sdk-exists=false" >> $GITHUB_OUTPUT
          echo "No SDK directory with package.json found. Skipping SDK dependency installation."
        fi

    - name: Install SDK Dependencies
      if: steps.check-sdk.outputs.sdk-exists == 'true'
      uses: FigurePOS/github-actions/.github/actions/node-npm-install@v3
      with:
        directory: ./sdk
        legacy-peer-deps: ${{ inputs.npm-legacy-peer-deps }}

    - name: Set Environment Variables
      if: inputs.env-vars != ''
      shell: bash
      run: |
        echo '${{ inputs.env-vars }}' | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while read -r line; do
          secret=${line#*=}
          echo "::add-mask::$secret"
          echo "$line" >> "$GITHUB_ENV"
        done

    - name: Run Linters and Unit Tests
      shell: bash
      run: npm run ci:test

    - name: Check for Lambda Directory
      id: check-lambda
      shell: bash
      run: |
        if [ -d "./lambda" ]; then
          echo "lambda-exists=true" >> $GITHUB_OUTPUT
          echo "Lambda directory found. Will process subfolders."
        else
          echo "lambda-exists=false" >> $GITHUB_OUTPUT
          echo "No Lambda directory found. Skipping Lambda processing."
        fi

    - name: Process Linters and Tests for Lambda Functions
      if: steps.check-lambda.outputs.lambda-exists == 'true'
      uses: FigurePOS/github-actions/.github/actions/node-test-lambda@v3
      with:
        directory: ./lambda
        npm-legacy-peer-deps: ${{ inputs.npm-legacy-peer-deps }}

    - name: Send Slack Notification About Failure
      if: failure() && github.ref == 'refs/heads/master'
      uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v3
      with:
        job-name: test-unit
        service-name: ${{ inputs.service-name }}
        trigger-url: ${{ inputs.buddy-trigger-url }}

