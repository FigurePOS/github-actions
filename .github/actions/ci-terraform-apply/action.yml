name: Terraform Deploy
description: Deploys the Terraform code

inputs:
  artifact-path:
    description: Path to download artifact from
    required: false
    type: string
  auth-providers:
    description: Providers to authenticate
    required: false
    type: string
  aws-account-id:
    description: AWS account ID
    required: true
    type: string
  aws-region:
    description: AWS region
    required: false
    type: string
    default: us-east-1
  backend-s3-key:
    description: The S3 key for the backend
    required: false
    type: string
  buddy-trigger-url:
    description: The Buddy trigger URL
    required: true
  db-tunnel-mapping:
    description: DB tunnel mapping
    required: false
    type: string
    default: ""
  dir:
    required: false
    default: tf
  env:
    description: The environment
    required: true
    type: string
  github-token-terraform:
    description: GitHub token to access other private repositories
    required: false
  service-name:
    description: The service name
    required: true
  sha:
    description: Release commit SHA
    required: false
    type: string
  ssm-parameters:
    description: The SSM parameters to set as environment variables in format "env_var_name1=ssm_path1,env_var_name2=ssm_path2"
    required: false

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Artifact
      if: inputs.artifact-path != ''
      uses: actions/download-artifact@v4
      with:
        path: ${{ inputs.artifact-path }}

    - name: Set Env Vars From SSM Parameters
      if: inputs.ssm-parameters != ''
      uses: FigurePOS/github-actions/.github/actions/set-env-vars-from-ssm-parameters@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        parameters: ${{ inputs.ssm-parameters }}
        service-name: ${{ inputs.service-name }}

    - name: Authenticate Terraform Providers
      uses: FigurePOS/github-actions/.github/actions/auth-terraform-providers@v4
      with:
        providers: ${{ inputs.auth-providers }}
        service-name: ${{ inputs.service-name }}

    - name: Create SSH tunnel
      if: inputs.db-tunnel-mapping != ''
      id: create-ssh-tunnel
      uses: FigurePOS/github-actions/.github/actions/db-create-ssh-tunnel@v4
      with:
        aws-account-id: ${{ inputs.aws-account-id }}
        aws-region: ${{ inputs.aws-region }}
        db-tunnel-mapping: ${{ inputs.db-tunnel-mapping }}
        service-name: ${{ inputs.service-name }}

    - name: Terraform Init
      uses: FigurePOS/github-actions/.github/actions/terraform-init@v4
      with:
        aws-account-id: ${{ inputs.aws-account-id }}
        backend-s3-key: ${{ inputs.backend-s3-key }}
        dir: ${{ inputs.dir }}
        env: ${{ inputs.env }}
        github-token-terraform: ${{ inputs.github-token-terraform }}
        service-name: ${{ inputs.service-name }}
      env:
        AWS_REGION: ${{ inputs.aws-region }}

    - name: Terraform Apply
      uses: FigurePOS/github-actions/.github/actions/terraform-apply@v4
      with:
        aws-account-id: ${{ inputs.aws-account-id }}
        dir: ${{ inputs.dir }}
        env: ${{ inputs.env }}
        service-name: ${{ inputs.service-name }}
        sha: ${{ inputs.sha }}
      env:
        AWS_REGION: ${{ inputs.aws-region }}

    - name: Cleanup Authenticated Terraform Providers
      if: always()
      uses: FigurePOS/github-actions/.github/actions/auth-terraform-providers-cleanup@v4
      with:
        providers: ${{ inputs.auth-providers }}
        service-name: ${{ inputs.service-name }}

    - name: Send Slack Notification About Failure
      if: failure() && github.ref == 'refs/heads/master'
      uses: FigurePOS/github-actions/.github/actions/buddy-notify-fail-service@v4
      with:
        job-name: terraform-deploy-${{ inputs.env }}
        service-name: ${{ inputs.service-name }}
        trigger-url: ${{ inputs.buddy-trigger-url }}

