name: Get Last Non-Skip CI Commit
description: Get the most recent commit SHA that doesn't contain [skip ci] in its message

inputs:
  start-git-ref:
    description: "The git reference to start searching from"
    required: true

outputs:
  commit-sha:
    description: "The SHA of the most recent commit without [skip ci] in its message"
    value: ${{ steps.find-commit.outputs.commit-sha }}

runs:
  using: composite
  steps:
    - name: Find Non-Skip CI Commit
      id: find-commit
      shell: bash
      run: |
        # Start from the input commit and look backwards through history
        echo "Last 20 commits:"
        git log -20 --oneline

        echo "Starting search from git reference: ${{ inputs.start-git-ref }}"
        current_sha="$(git rev-parse "${{ inputs.start-git-ref }}")"
        echo "Starting search from commit: $current_sha"

        while true; do
          # Get the commit message for the current SHA
          commit_msg=$(git log -1 --format=%B "$current_sha")
          echo "Checking commit: $current_sha"
          echo "  Commit message: $commit_msg"
          
          # Check if the commit message contains [skip ci]
          if [[ ! "$commit_msg" == *"[skip ci]"* ]]; then
            echo "  Found commit without [skip ci]: $current_sha"
            echo "commit-sha=$current_sha" >> $GITHUB_OUTPUT
            break
          else
            echo "  Commit contains [skip ci], moving to parent commit"
          fi
          
          # Get the parent commit
          parent_sha=$(git rev-parse "$current_sha^")
          if [ $? -ne 0 ]; then
            echo "Error: Failed to get parent commit for $current_sha"
            echo "Error: Reached end of history without finding a non-skip-ci commit"
            exit 1
          fi
          echo "  Moving to parent commit: $parent_sha"
          current_sha=$parent_sha
        done
